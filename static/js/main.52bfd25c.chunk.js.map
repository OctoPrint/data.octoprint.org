{"version":3,"sources":["components/DarkModeToggle.js","components/DaysToggle.js","util/data.js","components/Stats.js","util/charts.js","components/Piechart.js","components/InstanceStats.js","components/PrintingStats.js","components/PythonStats.js","components/ServerStats.js","components/ClientStats.js","components/FirmwareStats.js","hooks/useLocalStorage.js","App.js","reportWebVitals.js","index.js"],"names":["DarkModeToggle","props","useState","darkMode","setDarkMode","Tooltip","title","IconButton","onClick","onChange","color","DaysToggle","days","setDays","Button","newDays","BASE","fetchData","file","a","url","axios","get","data","Stats","loading","setLoading","since","setSince","lastUpdate","setLastUpdate","useEffect","fetchStats","stats","then","_since","_generated","onData","Content","style","display","justifyContent","CircularProgress","children","Typography","variant","Card","CardHeader","CardContent","COLORS","dateFormatter","date","moment","format","countFormatter","count","millify","durationFormatter","duration","humanize","piechartLegendFormatter","v","entry","index","payload","value","name","percent","percentage","asPercentage","piechartLabelRenderer","x","y","fill","textAnchor","alignmentBaseline","Math","round","Piechart","theme","useTheme","isSmallScreen","useMediaQuery","breakpoints","down","legendBelow","ResponsiveContainer","width","aspect","PieChart","Legend","formatter","layout","align","verticalAlign","contentStyle","palette","background","paper","text","primary","itemStyle","Pie","label","startAngle","endAngle","outerRadius","innerRadius","stroke","nameKey","dataKey","map","Cell","length","id","InstanceStats","setCount","instancesData","setInstancesData","versionsData","setVersionsData","d","versions","otherVersions","version","VERSION_COUNT","push","instances","histogram","slice","start","valueOf","AreaChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDashArray","XAxis","angle","interval","domain","scale","type","tickFormatter","height","axisLine","secondary","tickLine","tick","YAxis","labelFormatter","Area","fillOpacity","PrintingStats","total","setTotal","printingData","setPrintingData","totals","py2VersionsData","setPy2VersionsData","py3VersionsData","setPy3VersionsData","py2vs3Data","setPy2vs3Data","py2","py3","py2Versions","py3Versions","otherPy2Versions","otherPy3Versions","startsWith","python2","python3","Grid","container","item","xs","md","LineChart","Line","dot","strokeWidth","LOOKUP","linux","windows","macos","freebsd","ServerStats","coreData","setCoreData","osData","setOsData","bitsData","setBitsData","cores","os","bits","otherCores","coreStats","Object","keys","sort","b","forEach","console","log","ClientStats","browserTop10Data","setBrowserTop10Data","osTop10Data","setOsTop10Data","browserTop10","osTop10","otherBrowser","otherOs","browser","firmwareTop10Data","setFirmwareTop10Data","notableFirmwareData","setNotableFirmwareData","firmwareTop10","otherFw","notable","matcher","indexOf","fw","names","FW_COUNT","n","useLocalStorage","key","initialValue","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useStyles","makeStyles","root","overflow","grow","flexGrow","appBar","toolbar","urlbar","order","paddingBottom","spacing","mixins","content","minHeight","paddingTop","marginTop","marginBottom","footer","textAlign","padding","App","darkModeTheme","createMuiTheme","handleDarkModeToggle","handleDaysToggle","classes","Navbar","AppBar","className","Toolbar","ThemeProvider","flexDirection","CssBaseline","Container","maxWidth","Link","href","target","rel","underline","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52bfd25c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DarkModeIcon from \"@material-ui/icons/Brightness4\";\nimport LightModeIcon from \"@material-ui/icons/Brightness7\";\n\nexport default function DarkModeToggle(props) {\n    const [darkMode, setDarkMode] = useState(props.darkMode);\n\n    const handleDarkModeToggle = () => {\n        props.onChange(!darkMode);\n        setDarkMode(!darkMode);\n    };\n\n    return (\n        <Tooltip title=\"Toggle dark mode\">\n            <IconButton onClick={handleDarkModeToggle} color=\"inherit\">\n                { darkMode ? <LightModeIcon /> : <DarkModeIcon /> }\n            </IconButton>\n        </Tooltip>\n    )\n}","import React, { useState } from \"react\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function DaysToggle(props) {\n    const [days, setDays] = useState(props.days);\n\n    const handleDaysToggle = () => {\n        const newDays = days === 7 ? 30 : 7;\n        props.onChange(newDays);\n        setDays(newDays);\n    };\n\n    return (\n        <Tooltip title=\"Switch between 30 and 7 days view\">\n            <Button color=\"inherit\" onClick={handleDaysToggle}>{days === 30 ? \"Switch to 7 days\" : \"Switch to 30 days\"}</Button>\n        </Tooltip>\n    )\n}","import axios from \"axios\";\n\nconst BASE = \"https://data.octoprint.org/export/\";\n\nexport default async function fetchData(file) {\n    const url = BASE + file;\n    return await (await axios.get(url)).data;\n}\n\nexport async function fetchInstanceStats(days) {\n    return await fetchData(`instance_stats_${days}d.json`);\n}\n\nexport async function fetchPluginStats(days) {\n    return await fetchData(`plugin_stats_${days}d.json`);\n}\n\nexport async function fetchPrintingStats(days) {\n    return await fetchData(`printing_stats_${days}d.json`);\n}\n\nexport async function fetchPythonStats(days) {\n    return await fetchData(`python_stats_${days}d.json`);\n}\n","import React, { useState, useEffect } from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport fetchStats from \"../util/data\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default function Stats(props) {\n    const [ loading, setLoading ] = useState(true);\n    const [ since, setSince ] = useState();\n    const [ lastUpdate, setLastUpdate ] = useState();\n\n    useEffect(() => {\n        fetchStats(props.stats).then((data) => {\n            setSince(data._since);\n            setLastUpdate(data._generated);\n            props.onData(data);\n            setLoading(false);\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.stats]);\n\n    const Content = () => {\n        if (loading) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", }}>\n                    <CircularProgress />\n                </div>\n            )\n        } else {\n            return (\n                <>\n                    {props.children}\n                    <Typography variant=\"caption\">Based on usage data from {since} until {lastUpdate}</Typography>\n                </>\n            )\n        }\n    }\n\n    return (\n        <Card style={{}}>\n            <CardHeader title={props.title} />\n            <CardContent>\n                <Content />\n            </CardContent>\n        </Card>\n    );\n}","import millify from \"millify\";\nimport moment from \"moment\";\n\n// classic grafana palette\nexport const COLORS = [\n    '#7EB26D', // 0: pale green\n    '#EAB839', // 1: mustard\n    '#6ED0E0', // 2: light blue\n    '#EF843C', // 3: orange\n    '#E24D42', // 4: red\n    '#1F78C1', // 5: ocean\n    '#BA43A9', // 6: purple\n    '#705DA0', // 7: violet\n    '#508642', // 8: dark green\n    '#CCA300', // 9: dark sand\n    '#447EBC',\n    '#C15C17',\n    '#890F02',\n    '#0A437C',\n    '#6D1F62',\n    '#584477',\n    '#B7DBAB',\n    '#F4D598',\n    '#70DBED',\n    '#F9BA8F',\n    '#F29191',\n    '#82B5D8',\n    '#E5A8E2',\n    '#AEA2E0',\n    '#629E51',\n    '#E5AC0E',\n    '#64B0C8',\n    '#E0752D',\n    '#BF1B00',\n    '#0A50A1',\n    '#962D82',\n    '#614D93',\n    '#9AC48A',\n    '#F2C96D',\n    '#65C5DB',\n    '#F9934E',\n    '#EA6460',\n    '#5195CE',\n    '#D683CE',\n    '#806EB7',\n    '#3F6833',\n    '#967302',\n    '#2F575E',\n    '#99440A',\n    '#58140C',\n    '#052B51',\n    '#511749',\n    '#3F2B5B',\n    '#E0F9D7',\n    '#FCEACA',\n    '#CFFAFF',\n    '#F9E2D2',\n    '#FCE2DE',\n    '#BADFF4',\n    '#F9D9F9',\n    '#DEDAF7',\n  ];\n\nexport const dateFormatter = (date) => {\n    return moment(date).format(\"YYYY-MM-DD HH:00\");\n}\n\nexport const countFormatter = (count) => {\n    return millify(count);\n}\n\nexport const durationFormatter = (duration) => {\n    return moment.duration(duration * 1000).humanize();\n}\n\nexport const piechartLegendFormatter = (v, entry, index) => {\n    const {value, name, percent} = entry.payload;\n    const percentage = asPercentage(percent);\n    return `${name}: ${percentage}% (${countFormatter(value)})`;\n}\n\nexport const piechartLabelRenderer = (props) => {\n    const {x, y, fill, textAnchor, name, percent} = props;\n    const percentage = asPercentage(percent);\n    return (\n        <text x={x} y={y} fill={fill} alignmentBaseline=\"middle\" textAnchor={textAnchor}>{name} ({percentage}%)</text>\n    );\n} \n\n\nexport const asPercentage = (percentage) => {\n    return Math.round(percentage * 100, 2);\n}\n","import React from \"react\";\n\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { ResponsiveContainer, PieChart, Pie, Cell, Tooltip, Legend } from 'recharts';\nimport { COLORS, piechartLegendFormatter, piechartLabelRenderer } from '../util/charts';\n\nexport default function Piechart(props) {\n    const theme = useTheme();\n\n    const isSmallScreen = useMediaQuery(theme.breakpoints.down('md'));\n    const legendBelow = isSmallScreen || props.legendBelow;\n\n    return (\n        <ResponsiveContainer width=\"100%\" aspect={isSmallScreen ? 1 : 1.78}>\n            <PieChart>\n                {legendBelow ? (\n                    <Legend formatter={piechartLegendFormatter} />\n                ) : (\n                    <Legend layout=\"vertical\" align=\"right\" verticalAlign=\"top\" formatter={piechartLegendFormatter} />\n                )}\n                <Tooltip \n                    contentStyle={{\"backgroundColor\": theme.palette.background.paper, \"color\": theme.palette.text.primary}}\n                    itemStyle={{ \"color\": theme.palette.text.primary }}\n                />\n                <Pie\n                    data={props.data}\n                    label={isSmallScreen ? false : piechartLabelRenderer}\n                    startAngle={90}\n                    endAngle={-270}\n                    outerRadius=\"70%\"\n                    innerRadius=\"35%\"\n                    stroke={theme.palette.background.paper}\n                    nameKey={props.nameKey}\n                    dataKey={props.dataKey}\n                >\n                    {props.data.map((entry, index) => (\n                        <Cell key={`cell-${props.id}-${index}`} fill={COLORS[index % COLORS.length]}/>\n                    ))}\n                </Pie>\n            </PieChart>\n        </ResponsiveContainer>\n    );\n}\n","import React, { useState } from \"react\";\n\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { Typography } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport moment from \"moment\";\n\nimport Stats from \"./Stats\";\nimport StatPieChart from \"./Piechart\";\n\nimport { COLORS, dateFormatter, countFormatter } from \"../util/charts\";\n\nconst VERSION_COUNT = 10;\n\nexport default function InstanceStats(props) {\n    const [ count, setCount ] = useState();\n    const [ instancesData, setInstancesData ] = useState([]);\n    const [ versionsData, setVersionsData ] = useState([]);\n\n    const theme = useTheme();\n\n    const isSmallScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n    const onData = (d) => {\n        let versions = [];\n        const otherVersions = {\n            version: \"Others\",\n            count: 0\n        };\n        for (const version in d.versions) {\n            if (versions.length < VERSION_COUNT - 1) {\n                versions.push({\n                    version: version,\n                    count: d.versions[version]\n                });\n            } else {\n                otherVersions.count += d.versions[version];\n            }\n        };\n        versions.push(otherVersions);\n\n        let instances = [];\n        for (const entry of d.histogram.slice(1, -1)) {\n            const start = moment(entry.start).valueOf();\n            instances.push({\n                start: start,\n                count: entry.count\n            });\n        }\n\n        setCount(d.count);\n        setInstancesData(instances);\n        setVersionsData(versions);\n    }\n\n    const instanceTooltipLabelFormatter = (label) => {\n        return dateFormatter(label);\n    }\n\n    const instanceTooltipFormatter = (value, name, props) => {\n        return [countFormatter(value), name];\n    }\n\n    return (\n        <Stats title={`Instance stats (past ${props.days} days)`} stats={`instance_stats_${props.days}d.json`} onData={onData}>\n            <p>Total unique instances: {count}</p>\n\n            <Typography variant=\"subtitle1\">\n                Unique instances per hour\n            </Typography>\n\n            <ResponsiveContainer width=\"100%\" aspect={isSmallScreen ? 1 : 1.78}>\n                <AreaChart data={instancesData}>\n                    <defs>\n                        <linearGradient id=\"instanceGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor={COLORS[0]} stopOpacity={0.8} />\n                            <stop offset=\"95%\" stopColor={COLORS[0]} stopOpacity={0} />\n                        </linearGradient>\n                    </defs>\n                    <CartesianGrid strokeDashArray=\"3 3\" />\n                    <XAxis \n                        dataKey=\"start\" \n                        angle=\"-60\" \n                        textAnchor=\"end\"\n                        interval=\"preserveStartAndEnd\"\n                        domain={[\"dataMin\", \"dataMax\"]}\n                        scale=\"time\" \n                        type=\"number\" \n                        tickFormatter={dateFormatter} \n                        height={150}\n                        axisLine={{stroke: theme.palette.text.secondary}}\n                        tickLine={{stroke: theme.palette.text.secondary}}\n                        tick={{fill: theme.palette.text.secondary}}\n                    />\n                    <YAxis \n                        tickFormatter={countFormatter}\n                        axisLine={{stroke: theme.palette.text.secondary}}\n                        tickLine={{stroke: theme.palette.text.secondary}}\n                        tick={{fill: theme.palette.text.secondary}}\n                    />\n                    <Tooltip \n                        labelFormatter={instanceTooltipLabelFormatter} \n                        formatter={instanceTooltipFormatter} \n                        contentStyle={{\"backgroundColor\": theme.palette.background.paper, \"color\": theme.palette.text.primary}}\n                    />\n                    <Legend />\n                    <Area type=\"monotone\" dataKey=\"count\" stroke={COLORS[0]} fillOpacity={1} fill=\"url(#instanceGradient)\" name=\"Instances\" />\n                </AreaChart>\n            </ResponsiveContainer>\n\n            <Typography variant=\"subtitle1\">\n                OctoPrint version distribution\n            </Typography>\n\n            <StatPieChart data={versionsData} nameKey=\"version\" dataKey=\"count\" id=\"octoprintVersions\" />\n        </Stats>\n    );\n}","import React, { useState } from \"react\";\n\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { Typography } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport moment from \"moment\";\n\nimport Stats from \"./Stats\";\n\nimport { COLORS, dateFormatter, durationFormatter } from \"../util/charts\";\n\nexport default function PrintingStats(props) {\n    const [ total, setTotal ] = useState();\n    const [ printingData, setPrintingData ] = useState([]);\n\n    const theme = useTheme();\n\n    const isSmallScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n    const onData = (d) => {\n        let totals = [];\n        for (const entry of d.histogram.slice(1, -1)) {\n            const start = moment(entry.start).valueOf();\n            totals.push({\n                start: start,\n                count: entry.count\n            });\n        }\n\n        setTotal(d.total);\n        setPrintingData(totals);\n    }\n\n    const histogramTooltipLabelFormatter = (label) => {\n        return dateFormatter(label);\n    }\n\n    const histogramTooltipFormatter = (value, name, props) => {\n        return [durationFormatter(value), name];\n    }\n\n    return (\n        <Stats title={`Printing stats (past ${props.days} days)`} stats={`printing_stats_${props.days}d.json`} onData={onData}>\n            <p>Total duration of all prints: {moment.duration(total * 1000).humanize()}</p>\n\n            <Typography variant=\"subtitle1\">\n                Printing duration per hour\n            </Typography>\n\n            <ResponsiveContainer width=\"100%\" aspect={isSmallScreen ? 1 : 1.78}>\n                <AreaChart data={printingData}>\n                    <defs>\n                        <linearGradient id=\"printingGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor={COLORS[0]} stopOpacity={0.8} />\n                            <stop offset=\"95%\" stopColor={COLORS[0]} stopOpacity={0} />\n                        </linearGradient>\n                    </defs>\n                    <CartesianGrid strokeDashArray=\"3 3\" />\n                    <XAxis \n                        dataKey=\"start\" \n                        angle=\"-60\" \n                        textAnchor=\"end\"\n                        interval=\"preserveStartAndEnd\"\n                        domain={[\"dataMin\", \"dataMax\"]}\n                        scale=\"time\" \n                        type=\"number\" \n                        tickFormatter={dateFormatter} \n                        height={150}\n                        axisLine={{stroke: theme.palette.text.secondary}}\n                        tickLine={{stroke: theme.palette.text.secondary}}\n                        tick={{fill: theme.palette.text.secondary}}\n                    />\n                    <YAxis \n                        tickFormatter={durationFormatter}\n                        axisLine={{stroke: theme.palette.text.secondary}}\n                        tickLine={{stroke: theme.palette.text.secondary}}\n                        tick={{fill: theme.palette.text.secondary}}\n                    />\n                    <Tooltip \n                        labelFormatter={histogramTooltipLabelFormatter} \n                        formatter={histogramTooltipFormatter} \n                        contentStyle={{\"backgroundColor\": theme.palette.background.paper, \"color\": theme.palette.text.primary}}\n                    />\n                    <Legend />\n                    <Area type=\"monotone\" dataKey=\"count\" stroke={COLORS[0]} fillOpacity={1} fill=\"url(#printingGradient)\" name=\"Printing Duration\" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </Stats>\n    );\n}","import React, { useState } from \"react\";\n\nimport { Grid, Typography } from \"@material-ui/core\";\nimport useTheme from \"@material-ui/core/styles/useTheme\"; \nimport { useMediaQuery } from \"@material-ui/core\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport moment from \"moment\";\n\nimport Stats from \"./Stats\";\nimport StatPieChart from \"./Piechart\";\n\nimport { COLORS, dateFormatter, countFormatter } from \"../util/charts\";\n\nconst VERSION_COUNT = 10;\n\nexport default function InstanceStats(props) {\n    const [ instancesData, setInstancesData ] = useState([]);\n    const [ versionsData, setVersionsData ] = useState([]);\n    const [ py2VersionsData, setPy2VersionsData ] = useState([]);\n    const [ py3VersionsData, setPy3VersionsData ] = useState([]);\n    const [ py2vs3Data, setPy2vs3Data ] = useState([]);\n\n    const theme = useTheme();\n\n    const isSmallScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n    const onData = (d) => {\n        let versions = [];\n        const otherVersions = {\n            version: \"Others\",\n            count: 0\n        };\n        let py2 = 0;\n        let py3 = 0;\n        let py2Versions = [];\n        let py3Versions = [];\n        const otherPy2Versions = {\n            version: \"Others\",\n            count: 0\n        };\n        const otherPy3Versions = {\n            version: \"Others\",\n            count: 0\n        };\n\n        for (const version in d.versions) {\n            if (versions.length < VERSION_COUNT - 1) {\n                versions.push({\n                    version: version,\n                    count: d.versions[version].instances\n                });\n            } else {\n                otherVersions.count += d.versions[version].instances;\n            }\n\n            if (version.startsWith(\"2.\")) {\n                py2 += d.versions[version].instances;\n                if (py2Versions.length < VERSION_COUNT - 1) {\n                    py2Versions.push({\n                        version: version,\n                        count: d.versions[version].instances\n                    });\n                } else {\n                    otherPy2Versions.count += d.versions[version].instances;\n                }\n            } else if (version.startsWith(\"3.\")) {\n                py3 += d.versions[version].instances;\n                if (py3Versions.length < VERSION_COUNT - 1) {\n                    py3Versions.push({\n                        version: version,\n                        count: d.versions[version].instances\n                    });\n                } else {\n                    otherPy3Versions.count += d.versions[version].instances;\n                }\n            }\n        };\n        if (otherVersions.count > 0) {\n            versions.push(otherVersions);\n        }\n        if (py2Versions.length > 0) {\n            py2Versions.push(otherPy2Versions);\n        }\n        if (py3Versions.length > 0) {\n            py3Versions.push(otherPy3Versions);\n        }\n\n        let instances = [];\n        for (const entry of d.histogram.slice(1, -1)) {\n            const start = moment(entry.start).valueOf();\n            instances.push({\n                start: start,\n                python2: entry.python2,\n                python3: entry.python3,\n            });\n        }\n\n        setVersionsData(versions);\n        setPy2VersionsData(py2Versions);\n        setPy3VersionsData(py3Versions);\n        setPy2vs3Data([\n            {\n                version: \"Python 2\",\n                count: py2\n            },\n            {\n                version: \"Python 3\",\n                count: py3\n            }\n        ]);\n        setInstancesData(instances);\n    }\n\n    const instanceTooltipLabelFormatter = (label) => {\n        return dateFormatter(label);\n    }\n\n    const instanceTooltipFormatter = (value, name, props) => {\n        return [countFormatter(value), name];\n    }\n\n    return (\n        <Stats title={`Python stats (past ${props.days} days)`} stats={`python_stats_${props.days}d.json`} onData={onData}>\n            <Typography variant=\"subtitle1\">\n                Python 2 vs 3\n            </Typography>\n\n            <Grid container>\n                <Grid item xs={12} md={5}>\n                    <StatPieChart data={py2vs3Data} nameKey=\"version\" dataKey=\"count\" id=\"py2vs3\" legendBelow />\n                </Grid>\n                <Grid item xs={12} md={7}>\n                    <ResponsiveContainer width=\"100%\" aspect={isSmallScreen ? 1 : 1.78}>\n                        <LineChart width={400} height={400} data={instancesData}>\n                            <CartesianGrid strokeDashArray=\"3 3\" />\n                            <XAxis \n                                dataKey=\"start\" \n                                angle=\"-60\" \n                                textAnchor=\"end\"\n                                interval=\"preserveStartAndEnd\"\n                                domain={[\"dataMin\", \"dataMax\"]}\n                                scale=\"time\" \n                                type=\"number\" \n                                tickFormatter={dateFormatter} \n                                height={150}\n                                axisLine={{stroke: theme.palette.text.secondary}}\n                                tickLine={{stroke: theme.palette.text.secondary}}\n                                tick={{fill: theme.palette.text.secondary}}\n                            />\n                            <YAxis \n                                axisLine={{stroke: theme.palette.text.secondary}}\n                                tickLine={{stroke: theme.palette.text.secondary}}\n                                tick={{fill: theme.palette.text.secondary}}\n                            />\n                            <Tooltip \n                                labelFormatter={instanceTooltipLabelFormatter} \n                                formatter={instanceTooltipFormatter} \n                                contentStyle={{\"backgroundColor\": theme.palette.background.paper, \"color\": theme.palette.text.primary}}\n                            />\n                            <Legend />\n                            <Line dataKey=\"python2\" dot={false} strokeWidth={2} stroke={COLORS[0]} name=\"Python 2\" />\n                            <Line dataKey=\"python3\" dot={false} strokeWidth={2} stroke={COLORS[1]} name=\"Python 3\" />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </Grid>\n            </Grid>\n\n            <Typography variant=\"subtitle1\">\n                Python version distribution\n            </Typography>\n\n            <StatPieChart data={versionsData} nameKey=\"version\" dataKey=\"count\" id=\"pythonVersions\" />\n\n            <Typography variant=\"subtitle1\">\n                Individual Python version distribution for 2.x and 3.x\n            </Typography>\n\n            <Grid container>\n                <Grid item xs={12} md={6}>\n                    <StatPieChart data={py2VersionsData} nameKey=\"version\" dataKey=\"count\" id=\"python2Versions\" />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <StatPieChart data={py3VersionsData} nameKey=\"version\" dataKey=\"count\" id=\"python3Versions\" />\n                </Grid>\n            </Grid>\n        </Stats>\n    );\n}","import React, { useState } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Stats from \"./Stats\";\nimport StatPieChart from \"./Piechart\";\n\nconst LOOKUP = {\n    linux: \"Linux\",\n    windows: \"Windows\",\n    macos: \"Mac\",\n    freebsd: \"FreeBSD\"\n}\n\nexport default function ServerStats(props) {\n    const [ coreData, setCoreData ] = useState([]);\n    const [ osData, setOsData ] = useState([]);\n    const [ bitsData, setBitsData ] = useState([]);\n\n    const onData = (d) => {\n        let cores = [];\n        let os = [];\n        let bits = [];\n\n        const otherCores = {\n            name: \"Other\",\n            count: 0\n        };\n\n        const coreStats = Object.keys(d.cores);\n        coreStats.sort((a, b) => d.cores[b].instances - d.cores[a].instances);\n        coreStats.forEach((entry) => {\n            if (cores.length <= 10 && entry > 0) {\n                console.log(entry);\n                cores.push({\n                    name: entry,\n                    count: d.cores[entry].instances\n                })\n            } else {\n                otherCores.count += d.cores[entry].instances;\n            }\n        });\n        if (otherCores.count > 0) {\n            cores.push(otherCores);\n        }\n\n        for (const entry in d.os) {\n            os.push({\n                name: LOOKUP[entry],\n                count: d.os[entry].instances\n            });\n        };\n\n        for (const entry in d.bits) {\n            bits.push({\n                name: entry,\n                count: d.bits[entry].instances\n            })\n        }\n\n        setCoreData(cores);\n        setOsData(os);\n        setBitsData(bits);\n    }\n\n    return (\n        <Stats title={`Server Environment stats (past ${props.days} days)`} stats={`server_environment_stats_${props.days}d.json`} onData={onData}>\n            <Typography variant=\"subtitle1\">\n                Operating System\n            </Typography>\n            <StatPieChart data={osData} nameKey=\"name\" dataKey=\"count\" id=\"os\" />\n            <Typography variant=\"subtitle1\">\n                Bits\n            </Typography>\n            <StatPieChart data={bitsData} nameKey=\"name\" dataKey=\"count\" id=\"bits\" />\n            <Typography variant=\"subtitle1\">\n                Core count\n            </Typography>\n            <StatPieChart data={coreData} nameKey=\"name\" dataKey=\"count\" id=\"cores\" />\n         </Stats>\n    );\n}","import React, { useState } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Stats from \"./Stats\";\nimport StatPieChart from \"./Piechart\";\n\nconst COUNT = 10;\n\nexport default function ClientStats(props) {\n    const [ browserTop10Data, setBrowserTop10Data ] = useState([]);\n    const [ osTop10Data, setOsTop10Data ] = useState([]);\n\n    const onData = (d) => {\n        let browserTop10 = [], osTop10 = [];\n\n        const otherBrowser = {\n            name: \"Other\",\n            count: 0\n        };\n        const otherOs = {\n            name: \"Other\",\n            count: 0\n        };\n\n        for (const browser in d.browser) {\n            if (browserTop10.length < COUNT) {\n                browserTop10.push({\n                    name: browser,\n                    count: d.browser[browser].instances\n                });\n            } else {\n                otherBrowser.count += d.browser[browser].instances;\n            }\n        };\n        if (otherBrowser.count > 0) {\n            browserTop10.push(otherBrowser);\n        }\n\n        for (const os in d.os) {\n            if (osTop10.length < COUNT) {\n                osTop10.push({\n                    name: os,\n                    count: d.os[os].instances\n                });\n            } else {\n                otherOs.count += d.os[os].instances;\n            }\n        };\n        if (otherOs.count > 0) {\n            osTop10.push(otherOs);\n        };\n\n        setBrowserTop10Data(browserTop10);\n        setOsTop10Data(osTop10);\n    }\n\n    return (\n        <Stats title={`Client Environment stats (past ${props.days} days)`} stats={`client_environment_stats_${props.days}d.json`} onData={onData}>\n            <p>Note: This data only gets tracked starting with OctoPrint 1.7.0, the instance counts will thus be low until general availability.</p>\n            <Typography variant=\"subtitle1\">\n                Browser\n            </Typography>\n            <StatPieChart data={browserTop10Data} nameKey=\"name\" dataKey=\"count\" id=\"browserTop10\" />\n            <Typography variant=\"subtitle1\">\n                Operating System\n            </Typography>\n            <StatPieChart data={osTop10Data} nameKey=\"name\" dataKey=\"count\" id=\"osTop10\" />\n         </Stats>\n    );\n}","import React, { useState } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Stats from \"./Stats\";\nimport StatPieChart from \"./Piechart\";\n\nconst FW_COUNT = 10;\n\nexport default function InstanceStats(props) {\n    const [ firmwareTop10Data, setFirmwareTop10Data ] = useState([]);\n    const [ notableFirmwareData, setNotableFirmwareData ] = useState([]);\n\n    const onData = (d) => {\n        let firmwareTop10 = [];\n        const otherFw = {\n            name: \"Other\",\n            count: 0\n        };\n\n        const notable = [\n            {\n                name: \"Prusa Marlin\",\n                matcher: name => name.startsWith(\"Prusa-Firmware\"),\n                count: 0\n            },\n            {\n                name: \"Creality Marlin\",\n                matcher: name => name.indexOf(\"Creality\") !== -1,\n                count: 0\n            },\n            {\n                name: \"TH3D Marlin\",\n                matcher: name => name.indexOf(\"TH3D\") !== -1,\n                count: 0\n            },\n            {\n                name: \"Marlin\",\n                matcher: name => name.startsWith(\"Marlin\"),\n                count: 0\n            },\n            {\n                name: \"Klipper\",\n                matcher: name => name.startsWith(\"Klipper\"),\n                count: 0\n            },\n            {\n                name: \"Repetier\",\n                matcher: name => name.startsWith(\"Repetier\"),\n                count: 0\n            },\n            {\n                name: \"Smoothieware\",\n                matcher: name => name.startsWith(\"Smoothieware\"),\n                count: 0\n            },\n            {\n                name: \"RepRapFirmware\",\n                matcher: name => name.startsWith(\"RepRapFirmware\"),\n                count: 0\n            },\n            {\n                name: \"Sailfish\",\n                matcher: name => name.startsWith(\"Sailfish\"),\n                count: 0\n            },\n            {\n                name: \"Malyan\",\n                matcher: name => name.startsWith(\"Malyan\"),\n                count: 0\n            }, \n            {\n                name: \"ANET A8\",\n                matcher: name => name.startsWith(\"ANET_A8\"),\n                count: 0\n            }, \n        ];\n         \n        for (const fw in d.names) {\n            if (firmwareTop10.length < FW_COUNT - 1) {\n                firmwareTop10.push({\n                    name: fw,\n                    count: d.names[fw].instances,\n                });\n            }\n            for (const n of notable) {\n                if (n.matcher(fw)) {\n                    n.count += d.names[fw].instances;\n                    break;\n                }\n            }\n        }\n        if (otherFw.count > 0) {\n            firmwareTop10.push(otherFw);\n        }\n\n        notable.sort((a, b) => b.count - a.count);\n\n        setFirmwareTop10Data(firmwareTop10);\n        setNotableFirmwareData(notable);\n    }\n\n    return (\n        <Stats title={`Firmware stats (past ${props.days} days)`} stats={`firmware_stats_${props.days}d.json`} onData={onData}>\n            <Typography variant=\"subtitle1\">\n                Firmware top 10\n            </Typography>\n            <StatPieChart data={firmwareTop10Data} nameKey=\"name\" dataKey=\"count\" id=\"firmwareTop10\" legendBelow />\n            <Typography variant=\"subtitle1\">\n                Notable firmware groups\n            </Typography>\n            <StatPieChart data={notableFirmwareData} nameKey=\"name\" dataKey=\"count\" id=\"notableFirmware\" />\n         </Stats>\n    );\n}","import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  // Source: https://usehooks.com/useLocalStorage/\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that\n  // persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      // Save state\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from \"react\";\n\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\n\nimport DarkModeToggle from \"./components/DarkModeToggle\";\nimport DaysToggle from \"./components/DaysToggle\";\nimport InstanceStats from \"./components/InstanceStats\";\nimport PrintingStats from \"./components/PrintingStats\";\nimport PythonStats from \"./components/PythonStats\";\nimport ServerStats from \"./components/ServerStats\";\nimport ClientStats from \"./components/ClientStats\";\nimport FirmwareStats from \"./components/FirmwareStats\";\n\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        overflow: \"auto\"\n    },\n    grow: {\n      flexGrow: 1\n    },\n\n    appBar: {\n    },\n    toolbar: {\n      [theme.breakpoints.down('md')]: {\n        \"justify-content\": \"flex-end\",\n        \"flex-wrap\": \"wrap\",\n      }\n    },\n    urlbar: {\n      flexGrow: 1,\n      [theme.breakpoints.down('md')]: {\n        \"flex-basis\": \"100%\",\n        order: 99,\n        paddingBottom: theme.spacing(2)\n      },\n    },\n    title: {\n      \"justify-item\": \"left\",\n    },\n\n    offset: theme.mixins.toolbar,\n\n    content: {\n      //flexGrow: 1,\n      \"padding-top\": theme.mixins.toolbar.minHeight,\n      [theme.breakpoints.down('md')]: {\n        \"padding-top\": theme.mixins.toolbar.minHeight * 2,\n      }\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      [theme.breakpoints.down('md')]: {\n        paddingTop: 0,\n      },\n      paddingBottom: theme.spacing(4),\n      flexGrow: 1,\n      \"& > *\": {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n      },\n    },\n    footer: {\n      textAlign: \"center\",\n      padding: \"1em\",\n    }\n}));\n\nexport default function App(props) {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [darkMode, setDarkMode] = useLocalStorage(\"enableDarkMode\", prefersDarkMode);\n    const [days, setDays] = useLocalStorage(\"days\", 30);\n\n    const palette = darkMode ? \"dark\" : \"light\";\n    const darkModeTheme = createMuiTheme({\n        palette: {\n            type: palette\n        }\n    });\n\n    const handleDarkModeToggle = () => {\n        setDarkMode(!darkMode);\n    }\n\n    const handleDaysToggle = () => {\n        setDays(days === 7 ? 30 : 7);\n    }\n\n    const classes = useStyles();\n\n    const Navbar = () => {\n      return (\n        <AppBar className={classes.appBar}>\n          <Toolbar className={classes.toolbar}>\n              <div className={classes.grow}>\n                data.octoprint.org\n              </div>\n              <DaysToggle days={days} onChange={handleDaysToggle} />\n              <DarkModeToggle darkMode={darkMode} onChange={handleDarkModeToggle} />\n          </Toolbar>\n        </AppBar>\n      )\n    }\n\n    return (\n        <ThemeProvider theme={darkModeTheme}>\n          <div className={classes.root} style={{display: \"flex\", minHeight: \"100vh\", flexDirection: \"column\"}}>\n              <CssBaseline />\n              <Navbar />\n              <main className={classes.content}>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                  <InstanceStats days={days} />\n                  <PrintingStats days={days} />\n                  <PythonStats days={days} />\n                  <ServerStats days={days} />\n                  <ClientStats days={days} />\n                  <FirmwareStats days={days} />\n                </Container>\n              </main>\n              <footer className={classes.footer}>\n                © 2021 <Link href=\"https://octoprint.org\" target=\"_blank\" rel=\"noreferrer noopener\" color=\"inherit\" underline=\"always\">OctoPrint</Link> &middot; <Link href=\"https://octoprint.org/imprint/\" target=\"_blank\" rel=\"noreferrer noopener\" color=\"inherit\" underline=\"always\">Imprint</Link> &middot; <Link href=\"https://octoprint.org/privacy/\" target=\"_blank\" rel=\"noreferrer noopener\" color=\"inherit\" underline=\"always\">Privacy Policy</Link><br />\n                Based on tracking data from the Anonymous Usage Tracking plugin, refer to <Link href=\"https://tracking.octoprint.org\" target=\"_blank\" rel=\"noreferrer noopener\" color=\"inherit\" underline=\"always\">tracking.octoprint.org</Link> for details.\n\n              </footer>\n          </div>\n        </ThemeProvider>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}